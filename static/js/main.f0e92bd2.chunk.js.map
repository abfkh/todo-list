{"version":3,"sources":["components/TodoForm.jsx","components/TodoItem.jsx","App.jsx","index.js"],"names":["TodoForm","props","useState","input","setInput","onSubmit","e","preventDefault","addTodo","className","value","onChange","target","placeholder","type","TodoItem","todo","removeTodo","completeTodo","importantTodo","completed","style","important","background","text","onClick","id","marginRight","App","todos","setTodos","updatedTodos","filter","map","sortedTodos","sort","a","b","length","newTodos","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEe,SAASA,EAASC,GAC/B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,EAAMO,QAAQL,GACdC,EAAS,KAIqBK,UAAU,aACtC,2BACEC,MAAOP,EACPQ,SAAU,SAACL,GAAD,OAAOF,EAASE,EAAEM,OAAOF,QACnCD,UAAU,aACVI,YAAY,eAEd,4BAAQC,KAAK,SAASL,UAAU,eAAhC,WACW,KACD,K,kBCjBD,SAASM,EAASd,GAC/B,IAAQe,EAAkDf,EAAlDe,KAAMC,EAA4ChB,EAA5CgB,WAAYC,EAAgCjB,EAAhCiB,aAAcC,EAAkBlB,EAAlBkB,cACxC,OACE,yBACEV,UAAWO,EAAKI,UAAY,oBAAsB,WAClDC,MACEL,EAAKM,UACD,CACEC,WACE,+EAEJ,IAGLP,EAAKQ,KAAM,IACZ,yBAAKf,UAAU,kBACb,4BACEgB,QAAS,kBAAMN,EAAcH,EAAKU,KAClCjB,UAAU,iBAFZ,KAKU,IACV,kBAAC,IAAD,CACEY,MAAO,CAAEM,YAAa,GACtBF,QAAS,kBAAMR,EAAWD,EAAKU,OAC9B,IACH,kBAAC,IAAD,CAAeD,QAAS,kBAAMP,EAAaF,EAAKU,OAAQ,KACnD,KCgCEE,MA1Df,WACE,MAA0B1B,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAYMb,EAAa,SAACS,GAClB,IAAIK,EAAe,YAAIF,GAAOG,QAAO,SAAChB,GAAD,OAAUA,EAAKU,KAAOA,KAC3DI,EAASC,IAGLb,EAAe,SAACQ,GACpB,IAAIK,EAAeF,EAAMI,KAAI,SAACjB,GAI5B,OAHIA,EAAKU,KAAOA,IACdV,EAAKI,WAAaJ,EAAKI,WAElBJ,KAETc,EAASC,IAGLZ,EAAgB,SAACO,GACrB,IAAIK,EAAeF,EAAMI,KAAI,SAACjB,GAI5B,OAHIA,EAAKU,KAAOA,IACdV,EAAKM,WAAaN,EAAKM,WAElBN,KAGTc,EAASC,IAEPG,EAAcL,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEf,UAAYc,EAAEd,aACvD,OACE,yBAAKb,UAAU,YACb,2CADF,IACuB,kBAACT,EAAD,CAAUQ,QAtCnB,SAACgB,GACf,IAAIE,EAAK,EACLG,EAAMS,OAAS,IACjBZ,EAAKG,EAAM,GAAGH,GAAK,GAErB,IACIa,EAAQ,CADD,CAAEb,GAAIA,EAAIF,KAAMA,EAAMJ,WAAW,EAAOE,WAAW,IAClD,mBAAaO,IACzBC,EAASS,MA+B6C,IAChB,IACnCL,EAAYD,KAAI,SAACjB,GAChB,OACE,kBAACD,EAAD,CACEE,WAAYA,EACZC,aAAcA,EACdC,cAAeA,EACfH,KAAMA,EACNwB,IAAKxB,EAAKU,QAGZ,MCtDVe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f0e92bd2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TodoForm(props) {\n  const [input, setInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addTodo(input);\n    setInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"Add a Task\"\n      />\n      <button type=\"submit\" className=\"todo-button\">\n        Add Todo{\" \"}\n      </button>{\" \"}\n    </form>\n  );\n}\n","import React from \"react\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { BiCheckCircle } from \"react-icons/bi\";\n\nexport default function TodoItem(props) {\n  const { todo, removeTodo, completeTodo, importantTodo } = props;\n  return (\n    <div\n      className={todo.completed ? \"todo-row complete\" : \"todo-row\"}\n      style={\n        todo.important\n          ? {\n              background:\n                \"linear-gradient( 90deg, rgba(17, 122, 255, 1) 0%, hsl(323deg 59% 48%) 100%)\",\n            }\n          : {}\n      }\n    >\n      {todo.text}{\" \"}\n      <div className=\"iconsContainer\">\n        <button\n          onClick={() => importantTodo(todo.id)}\n          className=\"important-btn\"\n        >\n          !\n        </button>{\" \"}\n        <RiCloseCircleLine\n          style={{ marginRight: 5 }}\n          onClick={() => removeTodo(todo.id)}\n        />{\" \"}\n        <BiCheckCircle onClick={() => completeTodo(todo.id)} />{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoItem from \"./components/TodoItem\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (text) => {\n    let id = 1;\n    if (todos.length > 0) {\n      id = todos[0].id + 1;\n    }\n    let todo = { id: id, text: text, completed: false, important: false };\n    let newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const importantTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.important = !todo.important;\n      }\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n  let sortedTodos = todos.sort((a, b) => b.important - a.important);\n  return (\n    <div className=\"todo-app\">\n      <h1> Todo List </h1> <TodoForm addTodo={addTodo} />{\" \"}\n      {/* <hr className=\"seperator\"/> */}{\" \"}\n      {sortedTodos.map((todo) => {\n        return (\n          <TodoItem\n            removeTodo={removeTodo}\n            completeTodo={completeTodo}\n            importantTodo={importantTodo}\n            todo={todo}\n            key={todo.id}\n          />\n        );\n      })}{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}